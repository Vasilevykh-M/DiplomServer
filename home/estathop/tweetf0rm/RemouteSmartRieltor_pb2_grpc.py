# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import RemouteSmartRieltor_pb2 as RemouteSmartRieltor__pb2


class EnginerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.postModel = channel.unary_unary(
                '/example.EnginerService/postModel',
                request_serializer=RemouteSmartRieltor__pb2.Model.SerializeToString,
                response_deserializer=RemouteSmartRieltor__pb2.Response.FromString,
                )
        self.postStat = channel.unary_unary(
                '/example.EnginerService/postStat',
                request_serializer=RemouteSmartRieltor__pb2.Stat.SerializeToString,
                response_deserializer=RemouteSmartRieltor__pb2.Response.FromString,
                )
        self.getData = channel.stream_unary(
                '/example.EnginerService/getData',
                request_serializer=RemouteSmartRieltor__pb2.IntervalDate.SerializeToString,
                response_deserializer=RemouteSmartRieltor__pb2.File.FromString,
                )


class EnginerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def postModel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def postStat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getData(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EnginerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'postModel': grpc.unary_unary_rpc_method_handler(
                    servicer.postModel,
                    request_deserializer=RemouteSmartRieltor__pb2.Model.FromString,
                    response_serializer=RemouteSmartRieltor__pb2.Response.SerializeToString,
            ),
            'postStat': grpc.unary_unary_rpc_method_handler(
                    servicer.postStat,
                    request_deserializer=RemouteSmartRieltor__pb2.Stat.FromString,
                    response_serializer=RemouteSmartRieltor__pb2.Response.SerializeToString,
            ),
            'getData': grpc.stream_unary_rpc_method_handler(
                    servicer.getData,
                    request_deserializer=RemouteSmartRieltor__pb2.IntervalDate.FromString,
                    response_serializer=RemouteSmartRieltor__pb2.File.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'example.EnginerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class EnginerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def postModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/example.EnginerService/postModel',
            RemouteSmartRieltor__pb2.Model.SerializeToString,
            RemouteSmartRieltor__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def postStat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/example.EnginerService/postStat',
            RemouteSmartRieltor__pb2.Stat.SerializeToString,
            RemouteSmartRieltor__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getData(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/example.EnginerService/getData',
            RemouteSmartRieltor__pb2.IntervalDate.SerializeToString,
            RemouteSmartRieltor__pb2.File.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ClientServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.postData = channel.unary_unary(
                '/example.ClientService/postData',
                request_serializer=RemouteSmartRieltor__pb2.File.SerializeToString,
                response_deserializer=RemouteSmartRieltor__pb2.Response.FromString,
                )
        self.getPredict = channel.unary_unary(
                '/example.ClientService/getPredict',
                request_serializer=RemouteSmartRieltor__pb2.File.SerializeToString,
                response_deserializer=RemouteSmartRieltor__pb2.Predict.FromString,
                )


class ClientServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def postData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getPredict(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ClientServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'postData': grpc.unary_unary_rpc_method_handler(
                    servicer.postData,
                    request_deserializer=RemouteSmartRieltor__pb2.File.FromString,
                    response_serializer=RemouteSmartRieltor__pb2.Response.SerializeToString,
            ),
            'getPredict': grpc.unary_unary_rpc_method_handler(
                    servicer.getPredict,
                    request_deserializer=RemouteSmartRieltor__pb2.File.FromString,
                    response_serializer=RemouteSmartRieltor__pb2.Predict.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'example.ClientService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ClientService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def postData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/example.ClientService/postData',
            RemouteSmartRieltor__pb2.File.SerializeToString,
            RemouteSmartRieltor__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getPredict(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/example.ClientService/getPredict',
            RemouteSmartRieltor__pb2.File.SerializeToString,
            RemouteSmartRieltor__pb2.Predict.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
